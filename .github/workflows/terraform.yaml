name: Terraform CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  terraform:
    name: "Terraform Workflow"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create SSH public key files
        run: |
          mkdir -p keys
          echo "${{ secrets.BASTION_KEY_PUB }}" > keys/bastion_key.pub
          echo "${{ secrets.WEB_INSTANCE_KEY_PUB }}" > keys/web_instance_key.pub

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init

      - name: Run tflint
        run: tflint --disable-rule=terraform_documented_variables

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: Run tfsec
        run: tfsec .

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        run: checkov -d . --config-file checkov.yaml

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply (only on push to main)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
